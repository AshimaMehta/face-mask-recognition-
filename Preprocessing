import cv2
import os

dataset_path = 'dataset'
categories = os.listdir(dataset_path)
labels = [i for i in range(len(categories))]
label_dictionary = dict(zip(categories,labels))



import numpy as np
from keras.utils import np_utils


resized_images=[]
target_category=[]
for category in categories:
    folder_path = os.path.join(dataset_path,category)
    img_names=os.listdir(folder_path)
        
    for img_name in img_names:
        img_path=os.path.join(folder_path,img_name)
        img=cv2.imread(img_path)
        try:          
            #Coverting the image into gray scale
            #resizing the gray scale into 100x100, since we need a fixed common size for all the images in the dataset
            resized_images.append(cv2.resize(cv2.cvtColor(img,cv2.COLOR_BGR2GRAY),(100,100)))
            target_category.append(label_dictionary[category])


        except Exception as e:
           
print('Exception:',e)

resized_images=np.array(resized_images)/255.0
resized_images=np.reshape(resized_images,(resized_images.shape[0],img_size,img_size,1))
target_category=np.array(target_category)
new_target_category=np_utils.to_categorical(target_category)
